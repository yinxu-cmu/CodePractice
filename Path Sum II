/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> pathSum(TreeNode root, int sum) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> path = new ArrayList<Integer>();
        pathSumAux(root, sum, result, path);
        return result;
    }
    
    public void pathSumAux(TreeNode root, int sum, 
        ArrayList<ArrayList<Integer>> result, ArrayList<Integer> path){
        if(root == null){
            return;
        }
        path.add(root.val);
        if( root.left == null && root.right == null){
            /* reach the leaf */
            if( sum == root.val ){
            /* find the path */
                ArrayList<Integer> newPath = new ArrayList<Integer>(path);
                result.add(newPath);
            }    
        }
        pathSumAux(root.left, sum - root.val, result, path);
        pathSumAux(root.right, sum - root.val, result, path);
        path.remove(path.size() - 1);
    }
}
