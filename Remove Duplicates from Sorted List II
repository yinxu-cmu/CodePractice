/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        // Start typing your Java solution below
        // DO NOT write main() function
        /* three pointers
           pre: previous node
           cur: current node
           next: keep checking next until val != cur.val
        */
        ListNode tmp = new ListNode(0);
        tmp.next = head;
        ListNode pre = tmp;
        ListNode cur = head;
        int len = 1;
        while( cur != null){
            ListNode nxt = cur.next;
            while(nxt != null && nxt.val == cur.val){
                nxt = nxt.next;
                len++;
            }
            if(len > 1){
                /* delete dup */
                pre.next = nxt;
            }else{
                pre = cur;
            }
            cur = nxt;
            len = 1;
        }
        return tmp.next;
    }
}
