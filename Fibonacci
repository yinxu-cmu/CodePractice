/* recursive 
* Time complexity (1.618)^n / 2
* exponential
*/
int fib(int n) {
   if (n < 2) return 1;
   else return fib(n-1)+fib(n-2);
}

/* iterative */
int fib(int n) {
  int i=1;
  int a=1, b=1;
  while (i<n) {
       int c = a+b;  // fib(i+1)
       a = b;
       b = c;
       i++;
  }
  return a;
}

/* lg(n) 
 * calcualte pow in lgN time
 */

(fn+1 fn  )       (1 1)^n
(fn   fn-1)  =    (1 0)


